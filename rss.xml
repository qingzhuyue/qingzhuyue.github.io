<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>读心悦 Blog</title>
        <link>https://qingzhuyue.github.io/</link>
        <description>读心悦 Blog</description>
        <lastBuildDate>Tue, 08 Aug 2023 16:35:30 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-Hans</language>
        <item>
            <title><![CDATA[前端性能]]></title>
            <link>https://qingzhuyue.github.io/前端性能</link>
            <guid>https://qingzhuyue.github.io/前端性能</guid>
            <pubDate>Tue, 08 Aug 2023 16:35:30 GMT</pubDate>
            <description><![CDATA[对于性能来说，需要一个度量，否则无法优化性能。比如常见的度量方式就是在DevTools的NetWork面板上，查阅到每一个文件的加载时间、DOM的加载的时间；可以观察到由白屏到显示内容的过程。]]></description>
            <content:encoded><![CDATA[<p>对于性能来说，需要一个度量，否则无法优化性能。比如常见的度量方式就是在DevTools的NetWork面板上，查阅到每一个文件的加载时间、DOM的加载的时间；可以观察到由白屏到显示内容的过程。</p><p>度量的方式有很多种，</p><p>前端性能指标：</p><ol><li>网络、浏览器、构建工具、跨端技术和CDN的角度来进行性能优化</li></ol><p><img loading="lazy" alt="在这里插入图片描述" src="/assets/images/event3-373c94b48b8b943ddd09363c34ae0227.png" width="543" height="825" class="img_ev3q"></p>]]></content:encoded>
            <category>前端性能</category>
        </item>
        <item>
            <title><![CDATA[babel]]></title>
            <link>https://qingzhuyue.github.io/babel</link>
            <guid>https://qingzhuyue.github.io/babel</guid>
            <pubDate>Sat, 08 Jul 2023 15:55:21 GMT</pubDate>
            <description><![CDATA[ES6是JavaScript比较稳定而且应用广泛，但是有部分浏览器并没有完全支持ES6。为了在开发中使用ES6，就需要将ES6编写的代码转化为ES5。]]></description>
            <content:encoded><![CDATA[<p>ES6是JavaScript比较稳定而且应用广泛，但是有部分浏览器并没有完全支持ES6。为了在开发中使用ES6，就需要将ES6编写的代码转化为ES5。</p><p>Babel就能够完成转换。</p><p>Babel是JavaScript的一种编译器，把ES6转为ES5，这样在开发中使用最新的语言特性，就不用担心兼容的问题了。</p><p>在Babel执行编译的时候，会从项目的.babelrc文件中读取配置，那么我们只需要将一些规则配置在babelrc文件中即可。</p><p>比如：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "plugins": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "babel-plugin-transform-runtime",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "polyfill": false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "presets": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "es2015",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "modules": false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "stage-2",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "react"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>plugins就是Babel使用了哪些插件，插件是怎么控制如何转换代码的。</p><p>presets：要转换的源码使用哪些新的语法特性。</p><p>在webpack中设置Babel，配置如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>配置</category>
        </item>
        <item>
            <title><![CDATA[webpack基本配置]]></title>
            <link>https://qingzhuyue.github.io/webpack基本配置</link>
            <guid>https://qingzhuyue.github.io/webpack基本配置</guid>
            <pubDate>Wed, 05 Jul 2023 05:37:52 GMT</pubDate>
            <description><![CDATA[现在的前端，出现很多种可以提高开发效率的工具和框架，但是源码却不能直接运行，只有通过转换之后才能正常运行。]]></description>
            <content:encoded><![CDATA[<p>现在的前端，出现很多种可以提高开发效率的工具和框架，但是源码却不能直接运行，只有通过转换之后才能正常运行。</p><p>那么构建就是把源码转化为可以执行的JavaScript、HTML和CSS代码。</p><p>构建包含：</p><ol><li>代码转换【比如typescript编译为JavaScript，scss编译为CSS】；</li><li>文件优化，比如压缩JavaScript，压缩合成图片；</li><li>代码分割，提取公共代码，提取首页不需要执行的代码让它异步加载；</li><li>模块合并，把模块分类合并成一个文件；</li><li>自动刷新，监听本地源码的变化，自动重新构建、刷新浏览器；</li><li>代码校验</li><li>自动发布。</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基础">基础<a href="#基础" class="hash-link" aria-label="基础的直接链接" title="基础的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="webpack">webpack<a href="#webpack" class="hash-link" aria-label="webpack的直接链接" title="webpack的直接链接">​</a></h3><p>webpack是一个打包模块化JavaScript的工具，通过loader转换文件，通过Plugin注入钩子，最后输出文件。</p><p>webpack专注于构建模块化项目。优点是：</p><ol><li>能做到开箱即用，一步到位；</li><li>通过Plugin扩展，灵活</li><li>使用的场景广泛</li><li>社区活跃，可以找到很多场景下的开源扩展</li><li>有良好的体验</li></ol><p>webpack也有缺点，就是只能用于采用模块化开发的项目。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="webpack配置">webpack配置<a href="#webpack配置" class="hash-link" aria-label="webpack配置的直接链接" title="webpack配置的直接链接">​</a></h3><p>1、 首先安装webpack和webpack-cli；
2、 创建基础的JavaScript文件盒HTML，代码如下：</p><p>index.html：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;!DOCTYPE html&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;html lang="en"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;head&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;meta charset="UTF-8"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;title&gt;Document&lt;/title&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/head&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;body&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;div id="root"&gt;&lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;script src="./dist/bundle.js"&gt;&lt;/script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/body&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/html&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>工具函数的JavaScript文件index.js:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">function show(content){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    window.document.getElementById("root").innerText = "Hello，" + content</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">module.exports = show;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>main.js代码如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const show = require("./index");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show("Webpack");</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>package.json配置如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  "scripts": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "build": "webpack"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>webpack的配置文件webpack.config.js如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const path = require("path");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">module.exports = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    entry:"./main.js",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    output:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        filename:"bundle.js",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        path:path.resolve(__dirname,"./dist")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>执行命令：<code>yarn build</code>，在浏览器中打开index.html文件，页面会显示：“Hello，Webpack”</p><p>执行命令后，文件夹下会生成一个dist文件夹，dist就是就是编译后的静态代码。</p><p>执行打包命令后，webpack从entry的配置文件开始，识别出源码中的模块化导入语句，递归地找出入口文件的依赖，然后进行打包。</p><p>这就是webpack基本的打包流程。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="loader">Loader<a href="#loader" class="hash-link" aria-label="Loader的直接链接" title="Loader的直接链接">​</a></h3><p>由于webpack不能解析CSS文件，那就需要同Loader机制来支持一些非JavaScript类型的文件，webpack.config.js配置更新如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const path = require("path");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">module.exports = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    entry: "./main.js",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    output: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        filename: "bundle.js",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        path: path.resolve(__dirname, "./dist")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    module: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rules: [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                test: /\.css$/,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                use: ['style-loader', 'css-loader']</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>配置了一组规则，在打包的时候，遇到CSS文件就是用css-loader来读取CSS文件，再使用style-loader来把CSS内容注入到JavaScript中。</p><p>规则里面的use属性，是一个由Loader名称组成的数组，Loader的执行顺序是由后往前。</p><p>我们可以在对应的Loader文档上查阅相关的用法。</p><p>现在添加CSS文件main.css:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#root {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    text-align: center;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>main.js中引入main.css:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">require("./main.css");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const show = require("./index");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show("Webpack");</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>执行命令后，页面的文字居中了。</p><p>这时候，并没有生成单独的CSS文件，CSS全部卸载JavaScript文件中，这样会有一个缺点，就是JavaScript文件变大，导致加载页面时间变长。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="plugin">Plugin<a href="#plugin" class="hash-link" aria-label="Plugin的直接链接" title="Plugin的直接链接">​</a></h3><p>Plugin是实现扩展Webpack功能的，在构建流程中注入钩子，这样给webpack带来很大的灵活性。</p><p>现在就实现打包生成单独的CSS文件。需要安装插件：<code>mini-css-extract-plugin</code>，webpack.config.js配置更新如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const path = require("path");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const MiniCssExtractPlugin = require('mini-css-extract-plugin'); //抽离CSS为独立文件的插件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">module.exports = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mode: 'development',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    entry: "./main.js",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    output: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        filename: "bundle.js",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        path: path.resolve(__dirname, "./dist")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    module: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rules: [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                test: /\.(css)$/,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                use: [MiniCssExtractPlugin.loader, 'css-loader'],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                // use: ['style-loader', 'css-loader']</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    plugins: [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new MiniCssExtractPlugin({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 指定抽离的之后形成的文件名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            filename: 'styles/[name]_[contenthash:8].css'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>打包后生成单独的CSS文件：main_094aa2e7.css，然后在HTML文件中引入CSS。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="devserver">DevServer<a href="#devserver" class="hash-link" aria-label="DevServer的直接链接" title="DevServer的直接链接">​</a></h3><blockquote><p>在开发中，启动项目需要http服务，而不是本地文件预览，这就需要监听文件的变化来自动刷新页面，可以支持source map，方便调试。</p><p>webpack官方提供了webpack-dev-server，实现了http服务。</p><p>配置如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const webpack = require('webpack')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const path = require("path");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const MiniCssExtractPlugin = require('mini-css-extract-plugin'); //抽离CSS为独立文件的插件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">module.exports = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mode: 'development',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    entry: "./main.js",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    output: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        filename: "bundle.js",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        path: path.resolve(__dirname, "./dist")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    module: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rules: [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                test: /\.(css)$/,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                use: [MiniCssExtractPlugin.loader, 'css-loader'],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                // use: ['style-loader', 'css-loader']</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    plugins: [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new MiniCssExtractPlugin({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 指定抽离的之后形成的文件名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // filename: 'styles/[name]_[contenthash:8].css'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            filename: 'styles/[name]_[contenthash:8].css'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new webpack.HotModuleReplacementPlugin(),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    devServer: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 开发时可直接访问到 ./public 下的静态资源，这些资源在开发中不必打包</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        port: 3000,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        open: true, // 打开浏览器</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        compress: false, // 是否压缩</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        static: "./",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        proxy: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            '/api': {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                target: "https://api.github.com",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                pathRewrite: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "^/api": ""</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                changeOrigin: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        hotOnly: true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>总结一下webpack的几个核心：</p><p>· Entry：入口，Webpack执行构建的第一步将从Entry开始，可抽象成输入。</p><p>· Module：模块，在Webpack里一切皆模块，一个模块对应一个文件。Webpack会从配置的Entry开始递归找出所有依赖的模块。</p><p>· Chunk：代码块，一个Chunk由多个模块组合而成，用于代码合并与分割。</p><p>· Loader：模块转换器，用于将模块的原内容按照需求转换成新内容。</p></blockquote><blockquote><p>· Plugin：扩展插件，在Webpack构建流程中的特定时机注入扩展逻辑，来改变构建结果或做我们想要的事情。</p><p>· Output：输出结果，在Webpack经过一系列处理并得出最终想要的代码后输出结果。</p><p>· Resolve：配置寻找模块的规则</p><p>· DevServer：配置DevServer</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置">配置<a href="#配置" class="hash-link" aria-label="配置的直接链接" title="配置的直接链接">​</a></h2><blockquote><p>webpack的配置有两种方式：</p><ol><li>通过JavaScript文件描述配置，比如webpack.config.js；</li><li>执行Webpack可执行文件的时候，通过命令行传入参数；</li></ol><p>这样输入不同命令，执行不同的配置文件。</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="entry">Entry<a href="#entry" class="hash-link" aria-label="Entry的直接链接" title="Entry的直接链接">​</a></h3><blockquote><p>Entry作为配置模块的入口。默认的情况下，会以context为根目录，context默认&gt; 是启动Webpack时所在的工作目录。比如：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    context:path.resolve(__dirname,"app"),</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这是选择将当前工作目录的app目录下作为webpack的工作目录。</p><p>entry的类型可以是String、Array或者Object，当参数为Object的时候，配置多个入口。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">       entry: "./main.js",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // entry: {a:"./main.js",b:"./index.js"},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // entry:["./index.js","./main.js"],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // context:path.resolve(__dirname,"app"),</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="output">Output<a href="#output" class="hash-link" aria-label="Output的直接链接" title="Output的直接链接">​</a></h3><blockquote><p>配置输出代码，属性值是一个Object类型，参数如下：</p><ol><li>filename，可以定义为自己喜欢的文件名，当时设置多个入口的时候，会根据入口的名称来区分输出文件名：<code>filename:'[name].js'</code>，这个变量名可以是name、id、hash或者chunkhash；</li><li>path，设置输出文件的目录，一般是会通过node的path模块获取绝对路径，比如：<code>path: path.resolve(__dirname, "./dist")</code>；</li><li>publicPath，有时候项目构建出的资源需要异步加载，publicPath是设置了需要异步加载的资源对应的URL地址。比如将构建的资源发布到CDN服务器上，利于加快页面的打开速度，配置如下：</li></ol><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">filename:'[name]_[chunkhash:8].js',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">publicPath:"https:cdn.duxinyues.com/assets/"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="module">Module<a href="#module" class="hash-link" aria-label="Module的直接链接" title="Module的直接链接">​</a></h3><blockquote><p>module配置处理模块的规则，比如配置对样式文件的解析：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">            {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                test: /\.(css)$/,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                use: [MiniCssExtractPlugin.loader, 'css-loader'],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                // use: ['style-loader', 'css-loader']</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                exclude: path.resolve(__dirname, "node_modules"), // 排除node_modules下的文件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="resolve">Resolve<a href="#resolve" class="hash-link" aria-label="Resolve的直接链接" title="Resolve的直接链接">​</a></h3><blockquote><p>Webpack启动后，是从入口模块出发，找出所有依赖的模块，Resolve是配置webpack如何寻找模块对应的文件。如果没有配置，那么webpack会按照默认的规则进行查找。</p></blockquote><blockquote><ol><li>alias，配置别名，通过别名的方式将原来导入路径映射成一个简单的导入路径。</li><li>extension，在导入语句没有带文件后缀名的时候，webpack会自动加上后缀名，去访问对应的文件是否存在，比如：<code>extension:['.js','.json']</code>，在配置中都找不到对应的文件，那就报错</li><li>modules，配置第三方模块，webpack会默认去node_modules下寻找，如果同一个模块被不同位置的文件引入，就会导致引入路径很长，通过modules的配置，这样优化了导入路径。</li><li>enforceExtension，设置为true时，所有导入语句必须带上后缀。</li></ol></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="plugin-1">Plugin<a href="#plugin-1" class="hash-link" aria-label="Plugin的直接链接" title="Plugin的直接链接">​</a></h3><blockquote><p>Plugin用来扩展Webpack的功能，比如：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    plugins: [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new MiniCssExtractPlugin({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 指定抽离的之后形成的文件名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // filename: 'styles/[name]_[contenthash:8].css'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            filename: 'styles/[name]_[contenthash:8].css'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new webpack.HotModuleReplacementPlugin(),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ],</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="resolveloader">resolveLoader<a href="#resolveloader" class="hash-link" aria-label="resolveLoader的直接链接" title="resolveLoader的直接链接">​</a></h3><p>resolveLoader配置Webpack如何查找Loader，比如：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">   resolveLoader:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    modules:['node_modules'],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    extensions:[".js",'.json']</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>resolveLoader一般用于加载本地的Loader。</p><h3></h3>]]></content:encoded>
            <category>配置</category>
        </item>
    </channel>
</rss>